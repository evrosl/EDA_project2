ff<-corr("specdata")
source('C:/Rworking/corr.R')
source('C:/Rworking/corr.R')
ff<-corr("specdata")
source('C:/Rworking/corr.R')
ff<-corr("specdata")
ff
ff<-corr("specdata",20)
length(ff)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit
submit()
source("submitscript1.R")
submit()
submit()
submit()
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.file())
args(list.files())
args(list.files
)
?getwd
setwd("old.dir")
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path(folder1,folder2)
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
swirl()
load(swirl)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length[x]]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("Hello", "World")
submit()
submit()
mad_libs(place="Cambridge",adjective="cold",noun="house")
submit()
"I" %p% "love" %p% "R!"
x$setinverse(m)
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
d <- matrix(c(1,2,3,4,3,2,1,1,1),nrow=3,ncol=3)
d
solve(d)
d <- matrix(c(1,2,3,4,3,2,1,4,1),nrow=3,ncol=3)
solve(d)
cacheSolve(d)
cacheSolve(x=d)
cacheSolve(x=d)
cacheSolve(x=d)
cacheSolve(x=d)
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x=d)
source('C:/Rworking/cachemean.R')
cachemean(c(5,6,7))
}
cachemean(c(5,6,7))
cachemean(makeVector(c(5,6,7))
)
cachemean(makeVector(c(5,6,7,10))
)
cachemean(makeVector(c(5,6,7,100)))
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
d <- matrix(c(1,2,3,4,3,2,1,4,1),nrow=3,ncol=3)
cacheSolve(makeCacheMatrix(d))
d
cacheSolve(makeCacheMatrix(d))
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(d))
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(d))
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(d))
cacheSolve(makeCacheMatrix(d))
cacheSolve(makeCacheMatrix(d))
source('C:/Rworking/cachemean.R')
cachemean(makeVector(c(5,6,7,100)))
cachemean(makeVector(c(5,6,7,100)))
cachemean(c(5,6,7,100))
cachemean(makeVector(c(5,6,7,100)))
makeVector(c(5,6,7,100))
source('C:/Rworking/cachemean.R')
makeVector(c(5,6,7,100))
cachemean(makeVector(c(5,6,7,100)))
cachemean(makeVector(c(5,6,7,100)),c(5,6,7,100))
cachemean(makeVector(c(5,6,7,100)))
cachemean(makeVector(c(5,6,7,100)))
source('C:/Rworking/cachemean.R')
cachemean(makeVector(c(5,6,7,100)))
cachemean(makeVector(c(5,6,7,100)))
source('C:/Rworking/cachemean.R')
cachemean(makeVector(c(5,6,7,100)))
source('C:/Rworking/cachemean.R')
cachemean(makeVector(c(5,6,7,100)))
cachemean(makeVector(c(5,6,7,100)))
a<-makeVector(c(5,6,7,100)))
a<-makeVector(c(5,6,7,100))
cachemean(a)
cachemean(a)
source('C:/Users/evros/ProgrammingAssignment2/cachematrix.R')
d <- matrix(c(1,2,3,4,3,2,1,4,1),nrow=3,ncol=3)
e<-makeCacheMatrix(d)
e
cacheSolve(e)
cacheSolve(e)
?debug
swirl
swirl()
library(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(y=cars$speed,x=cars$dist)
?plot
plot(x=cars$speed,y=cars$dist, xlab="Speed")
plot(x=cars$speed,y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
?plot
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2
)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
fileURL = "http://www.hscic.gov.uk/catalogue/PUB16988/Obes-phys-acti-diet-eng-2015-tab.csv"
download.file(fileURL,"diet.csv")
diet <- read.csv(diet.csv)
diet <- read.csv("diet.csv")
head(diet)
names(diet)
install.packages(c("lattice", "ggplot2"))
swirl
load(swirl)
load('swirl')
library(swirl)
swirl()
install_from_swirl('Exploratory Data Analysis')
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
load(ggplot2)
load('ggplot2')
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
head(airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
swirl
load(swirl)
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,'color'='blue')
boxplot(ppm,col ='blue')
abline(12)
abline(h=12)
hist(ppm,col='green)
hist(ppm,col='green')
hist(ppm,col='green')
rug(ppm)
low
high
hist(ppm,col='green',breaks=100)
rug(ppm)
hist(ppm,col='green')
abline(v=12,lwd=2)
abline(v = median(ppm),col='magenta',lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col='wheat',main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
?subset
subset(pollution, region=="east")
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25,col='green')
hist(subset(pollution,region=="west")$pm25,col='green')
with(pollution,plot)
with(pollution,plot(latitude,pm25))
abline(h=12)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<- subset(pollution,region=="west")
plot(west$latitude,west$ppm,main="west")
plot(west$latitude,west$pm25,main="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
library("swirl")
install.packages(swirl)
install.packages("swirl")
library("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("R6")
library(swirl)
install.packages("memoise")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
install.packages("curl")
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("fields")
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|','fixed set'=TRUE)
cnames<-strsplit(cnames,'|',fixed set=TRUE)
cnames<-strsplit(cnames,'|',fixed set=TRUE )
cnames<-strsplit(cnames,'|',fixed=TRUE )
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log(x0),log(x1))
boxplot(log10(x0),llog10(x1))
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both<-intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, Country.Code == 63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(median(pm25,na.rm=TRUE),lwd=2)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub, pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0,tapply((Sample.Value, State.Code,mean,na.rm=TRUE)))
mn0 <- with(pm0,tapply(Sample.Value, State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value, State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0.d1, by="state")
mrg <- merge(d0,d1, by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3])
)
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x <
| mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y, ]
source('C:/Rworking/EDA_project2/plot3.R')
install.packages("Rcpp")
source('C:/Rworking/EDA_project2/plot3.R')
setwd("EDA_project2/")
source('C:/Rworking/EDA_project2/plot3.R')
head(yem)
head(balt)
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
head(ytem)
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot3.R')
source('C:/Rworking/EDA_project2/plot4.R')
head(SCC)
source('C:/Rworking/EDA_project2/plot4.R')
head(ci)
SCC[c(4520,4673)]
source('C:/Rworking/EDA_project2/plot4.R')
SCC[c(4520,4673),]
source('C:/Rworking/EDA_project2/plot4.R')
source('C:/Rworking/EDA_project2/plot4.R')
head(ci)
?grepl
source('C:/Rworking/EDA_project2/plot4.R')
source('C:/Rworking/EDA_project2/plot4.R')
source('C:/Rworking/EDA_project2/plot4.R')
SCC[1:100,]
SCC[1:100,"Short.Name"]
SCC[500:600,"Short.Name"]
head(NEI)
source('C:/Rworking/EDA_project2/plot4.R')
head(ciSCC)
source('C:/Rworking/EDA_project2/plot4.R')
source('C:/Rworking/EDA_project2/plot4.R')
head(yc)
source('C:/Rworking/EDA_project2/plot4.R')
source('C:/Rworking/EDA_project2/plot4.R')
head(SCC)
summary(SCC$Short.Name)
source('C:/Rworking/EDA_project2/plot5.R')
head(mv)
mv
mv$Short.Name
source('C:/Rworking/EDA_project2/plot5.R')
source('C:/Rworking/EDA_project2/plot5.R')
source('C:/Rworking/EDA_project2/plot5.R')
